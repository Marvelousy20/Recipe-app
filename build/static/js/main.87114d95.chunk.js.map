{"version":3,"sources":["components/recipes.js","App.js","reportWebVitals.js","index.js","components/recipe.module.css"],"names":["recipes","image","title","calories","ingredients","recipe","style","maxWidth","className","styles","card","src","waves","toFixed","dietLabels","length","map","ingredient","index","text","api","App","React","useState","search","setSearch","setRecipes","query","setQuery","useEffect","getRecipe","e","a","url","Axios","get","response","data","console","log","hits","onSubmit","preventDefault","width","textAlign","type","value","onChange","target","display","flexWrap","justifyContent","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPAiCeA,MA7Bf,YAAiE,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAEnD,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASC,MAAS,CAACC,SAAU,SAAUC,UAAaC,IAAOC,KAA3D,UACI,cAAC,IAAD,CAAcF,UAAU,YAAYG,IAAKV,EAAOW,OAAK,IACrD,eAAC,IAAD,WACI,cAAC,IAAD,UAAeV,IACf,4CAAeC,EAASU,QAAQ,MACK,IAApCR,EAAOA,OAAOS,WAAWC,QAAgB,+CAAkBV,EAAOA,OAAOS,cAC1E,cAAC,IAAD,UACI,6BACKV,EAAYY,KAAI,SAACC,EAAYC,GAAb,OACb,6BACKD,EAAWE,MADLD,uBCb7CE,EACC,mCADDA,EAEA,WAqESC,MAjEf,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACNC,EADM,KACEC,EADF,OAEiBH,IAAMC,SAAS,IAFhC,mBAENvB,EAFM,KAEG0B,EAFH,OAGaJ,IAAMC,SAAS,WAH5B,mBAGNI,EAHM,KAGCC,EAHD,KAMbN,IAAMO,WAAU,WACdC,MACC,CAACH,IAEJ,IAUMG,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACVC,EADU,0CAC+BN,EAD/B,mBAC+CP,EAD/C,oBACiEA,GADjE,SAEOc,IAAMC,IAAIF,GAFjB,cAEVG,EAFU,gBAIOA,EAJP,gBAIRC,EAJQ,EAIRA,KAERC,QAAQC,IAAIvC,GACZ0B,EAAWW,EAAKG,MAPA,4CAAH,sDAUf,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQhC,UAAY,gCAApB,SACE,uBAAMiC,SAnBM,SAACV,GACnBA,EAAEW,iBACFd,EAASJ,IAiB4BlB,MAAS,CAACqC,MAAO,OAAQC,UAAW,UAAnE,UACE,uBAAOC,KAAK,OACVC,MAAStB,EACTuB,SA3BK,SAAChB,GAChBN,GAAU,kBAAMM,EAAEiB,OAAOF,UA2BfxC,MAAS,CAACqC,MAAO,SAEnB,cAAC,IAAD,CAAQE,KAAO,SAAf,2BAKN,cAAC,IAAD,CAAQrC,UAAY,OAApB,SACE,cAAC,IAAD,CAAQF,MAAS,CAAC2C,QAAS,OAAQC,SAAU,OAAQC,eAAgB,UAArE,SACGnD,EAAQgB,KAAI,SAACX,EAAQa,GAAT,OACX,qBAAoBV,UAAY,OAAhC,SACE,cAAC,EAAD,CACEP,MAASI,EAAOA,OAAOJ,MACvBC,MAASG,EAAOA,OAAO+C,MACvBjD,SAAYE,EAAOA,OAAOF,SAC1BC,YAAeC,EAAOA,OAAOD,YAC7BU,WAAcT,EAAOA,OAAOS,WAC5BT,OAAUA,KAPFa,cChDTmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mBClBAc,EAAOC,QAAU,CAAC,KAAO,uB","file":"static/js/main.87114d95.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCardImage, MDBCard, MDBCardTitle, MDBCardText, MDBCardBody, MDBBtn } from 'mdbreact'\r\nimport styles from './recipe.module.css'\r\n\r\nfunction recipes({image, title, calories, ingredients, recipe}) {\r\n    \r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol>\r\n                    <MDBCard style = {{maxWidth: '18rem'}} className = {styles.card}>\r\n                        <MDBCardImage className=\"img-fluid\" src={image} waves />\r\n                        <MDBCardBody>\r\n                            <MDBCardTitle>{title}</MDBCardTitle>\r\n                            <h6>Calories: {calories.toFixed(3)}</h6>\r\n                            {recipe.recipe.dietLabels.length !== 0 && <h6>Diet Labels: {recipe.recipe.dietLabels}</h6>}\r\n                            <MDBCardText>\r\n                                <ol>\r\n                                    {ingredients.map((ingredient, index) => (\r\n                                        <li key = {index}>\r\n                                            {ingredient.text}\r\n                                        </li> \r\n                                    ))}\r\n                                </ol>\r\n                            </MDBCardText>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    )\r\n}\r\n\r\nexport default recipes\r\n","import React from 'react'\nimport './App.css';\nimport {MDBInput, MDBBtn, MDBRow, MDBContainer, MDBCol } from 'mdbreact'\nimport Axios from 'axios'\nimport Recipes from './components/recipes'\n\nconst api = {\n  key: 'abb039e8747846d80992c6ad47412b04',\n  id: 'f6ff5ce0'\n}\nconst getExample = 'https://api.edamam.com/search?q=chicken&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}'\n\nfunction App() {\n  const [search, setSearch] = React.useState('')\n  const [recipes, setRecipes] = React.useState([]) ; // I am gettin an array from the API\n  const [query, setQuery] = React.useState('chicken')\n\n  // Runs only after the submit button as been clicked\n  React.useEffect(() => {\n    getRecipe() ;\n  }, [query])\n \n  const setValue = (e) => {\n    setSearch(() => e.target.value)\n  }\n  \n  // gets the value of search\n  const changeQuery = (e) => { \n    e.preventDefault()\n    setQuery(search)\n  }\n\n  const getRecipe = async (e) => {\n    const url = `https://api.edamam.com/search?q=${query}&app_id=${api.id}&app_key=${api.key}`\n    const response = await Axios.get(url)\n\n    const { data } = await response;\n\n    console.log(recipes)\n    setRecipes(data.hits)\n  }\n\n  return (\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol className = 'd-flex justify-content-center'>\n          <form onSubmit = {changeQuery} style = {{width: '100%', textAlign: 'center'}}>\n            <input type=\"text\"\n              value = {search}\n              onChange = {setValue} \n              style = {{width: '70%'}}\n            />     \n            <MDBBtn type = 'submit'>SEARCH</MDBBtn>\n          </form>\n        </MDBCol>\n      </MDBRow>\n          \n      <MDBRow className = 'my-5'> \n        <MDBCol style = {{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n          {recipes.map((recipe, index) => (\n            <div key = {index}  className = 'py-2'>\n              <Recipes\n                image = {recipe.recipe.image}\n                title = {recipe.recipe.label}\n                calories = {recipe.recipe.calories}\n                ingredients = {recipe.recipe.ingredients}\n                dietLabels = {recipe.recipe.dietLabels}\n                recipe = {recipe}\n              />\n            </div>   \n          ))}\n        </MDBCol>    \n      </MDBRow>\n    </MDBContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"recipe_card__1iGpE\"};"],"sourceRoot":""}